{"version":3,"sources":["components/needs.js","components/offers.js","App.js","serviceWorker.js","index.js"],"names":["Needs","dates","edits","names","locations","contacts","details","labels","updates","status","assistedBy","targetLabel","matchIndices","i","length","label_text","toString","details_text","toLowerCase","includes","push","Array","keys","class","map","index","Offers","dates1","edits1","names1","locations1","contacts1","details1","labels1","updates1","status1","targetLabel1","console","log","App","props","state","handleChange","bind","handleChange1","event","this","setState","target","value","sheetId","APIKey","options","method","mode","rowStart","rowEnd","columns","range","url","fetch","res","json","data","key","val","obj","keys1","rowStart1","rowEnd1","columns1","prevProps","fetchData","style","width","float","paddingLeft","type","onChange","paddingRight","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c64837e1.chunk.js","sourcesContent":["import React from 'react'\n\n    const Needs = ({ dates, edits, names, locations, contacts, details, labels, updates, status, assistedBy, targetLabel }) => {\n\n\t\tvar matchIndices = []\n\t\tif (targetLabel){\n\t\t\tfor (var i = 0; i < labels.length; i++) {\n\t\t\t\tconst label_text = labels[i].toString()\n\t\t\t\tconst details_text = details[i].toString()\n\t\t\t\tif (label_text.toLowerCase().includes(targetLabel.toLowerCase()) || details_text.toLowerCase().includes(targetLabel.toLowerCase())) matchIndices.push(i)\n\t\t\t}\n\t\t} else {\n\t\t\tmatchIndices = [...Array(dates.length).keys()];\n\t\t}\n\n\t\treturn (\n\t\t\t<div class=\"container-needs\">\n\t\t\t\t<br></br>\n\t\t\t\t<center><h2>needs</h2></center>\n\t\t\t\t{matchIndices.map((index) => (\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\t<div class=\"card-header\">{dates[index]}, edited [{edits[index]}], status: [{status[index]}]</div>\n\t\t\t\t\t<div class=\"card-body\">\n\t\t\t\t\t\t<h5 class=\"card-title\">{index+1}. {names[index]}</h5>\n\t\t\t\t\t\t<h6 class=\"card-subtitle mb-2 text-muted\">location: {locations[index]}</h6>\n\t\t\t\t\t\t<h6 class=\"card-subtitle mb-2 text-muted\">labels: {labels[index]}</h6>\n\t\t\t\t\t\t<p class=\"card-text\">{contacts[index]}</p>\n\t\t\t\t\t\t<p class=\"card-text\">{details[index]}</p>\n\t\t\t\t\t\t<p class=\"card-text text-muted\"><b>updates:</b> {updates[index]}</p>\n\t\t\t\t\t\t<p class=\"card-text text-muted\"><b>assisted by:</b> {assistedBy[index]}</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t\t\n\t\t\t</div>\n\n\t\t)\t\t\t\n    };\n\n    export default Needs","import React from 'react'\n\n    const Offers = ({ dates1, edits1, names1, locations1, contacts1, details1, labels1, updates1, status1, targetLabel1 }) => {\n\n\t\tvar matchIndices = []\n\t\tif (targetLabel1){\n\t\t\tconsole.log('hi ', targetLabel1)\n\t\t\tfor (var i = 0; i < labels1.length; i++) {\n\t\t\t\tconst label_text = labels1[i].toString()\n\t\t\t\tconst details_text = details1[i].toString()\n\t\t\t\tif (label_text.toLowerCase().includes(targetLabel1.toLowerCase()) || details_text.toLowerCase().includes(targetLabel1.toLowerCase())) matchIndices.push(i)\n\t\t\t}\n\t\t} else {\n\t\t\tmatchIndices = [...Array(dates1.length).keys()];\n\t\t}\n\n\t\treturn (\n\t\t\t<div class=\"container-offers\">\n\t\t\t\t<br></br>\n\t\t\t<center><h2>offers</h2></center>\n\t\t\t\t{matchIndices.map((index) => (\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\t<div class=\"card-header\">{dates1[index]}, edited [{edits1[index]}], status: [{status1[index]}] </div>\n\t\t\t\t\t<div class=\"card-body\">\n\t\t\t\t\t<h5 class=\"card-title\">{index+1}. {names1[index]}</h5>\n\t\t\t\t<h6 class=\"card-subtitle mb-2 text-muted\">location: {locations1[index]}</h6>\n\t\t\t\t<h6 class=\"card-subtitle mb-2 text-muted\">labels: {labels1[index]}</h6>\n\t\t\t\t\t<p class=\"card-text\">{contacts1[index]}</p>\n\t\t\t\t\t<p class=\"card-text\">{details1[index]}</p>\n\t\t\t\t\t<p class=\"card-text text-muted\"><b>updates:</b> {updates1[index]}</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t)\t\t\t\n\t\t\n\n    };\n\n    export default Offers","import React, { Component } from 'react';\nimport Needs from './components/needs';\nimport Offers from './components/offers';\n\nclass App extends Component {\n\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tdates: [],\n\t\t\tedits: [],\n\t\t\tnames: [],\n\t\t\tlocations: [],\n\t\t\tcontacts: [],\n\t\t\tdetails: [],\n\t\t\tlabels: [],\n\t\t\tupdates: [],\n\t\t\tstatus: [],\n\t\t\tassistedBy: [],\n\t\t\ttargetLabel: '',\n\t\t\tdates1: [],\n\t\t\tedits1: [],\n\t\t\tnames1: [],\n\t\t\tlocations1: [],\n\t\t\tcontacts1: [],\n\t\t\tdetails1: [],\n\t\t\tlabels1: [],\n\t\t\tupdates1: [],\n\t\t\tstatus1: [],\n\t\t\ttargetLabel1: ''\n\t\t};\n\t\tthis.handleChange = this.handleChange.bind(this)\n\t\tthis.handleChange1 = this.handleChange1.bind(this)\n\t}\n\n\thandleChange(event) {\n\t\tthis.setState({ targetLabel: event.target.value })\n\t}\n\n\thandleChange1(event) {\n\t\tthis.setState({ targetLabel1: event.target.value })\n\t}\n  //get rest api\n\n  async componentDidMount() {\n\tconst sheetId = '1XzScy_hXVg7hVScZ_g6RBxq-ubkyvt601zD88w1IOo4';\n\tconst APIKey = 'AIzaSyAifplI-xEZ993f7tup1u2OHkNonXmZV6o'\n\tconst options = {\n\t\tmethod: 'GET',\n\t\tmode: 'cors'\n\t}\n\n\tconst keys = ['dates', 'edits', 'names', 'locations', 'contacts', 'details', 'labels', 'status', 'assistedBy', 'updates']\n\tconst rowStart = '4'\n\tconst rowEnd = '200'\n\tconst columns = ['A', 'K', 'B', 'H', 'I', 'F', 'E', 'J', 'L', 'M']\n\n\tfor (var i = 0; i < keys.length; i++){\n\t\tconst range = columns[i] + rowStart + ':' + columns[i] + rowEnd\n\t\tconst url = 'https://sheets.googleapis.com/v4/spreadsheets/' + sheetId + '/values/Needs!' + range + '?key=' + APIKey\n\n\t\tconst res = await fetch(url, options)\n\t\tconst data = await res.json()\n\t\tvar key = keys[i]\n\t\tvar val = data[\"values\"]\n\t\tvar obj = {}\n\t\tobj[key] = val\n\t\tthis.setState(obj)\n\t}\n\n\tconst keys1 = ['dates1', 'edits1', 'names1', 'locations1', 'contacts1', 'details1', 'labels1', 'status1', 'updates1']\n\tconst rowStart1 = '4'\n\tconst rowEnd1 = '200'\n\tconst columns1 = ['A', 'K', 'B', 'H', 'I', 'F', 'E', 'J', 'L']\n\n\tfor (var i = 0; i < keys1.length; i++){\n\t\tconst range = columns1[i] + rowStart1 + ':' + columns1[i] + rowEnd1\n\t\tconst url = 'https://sheets.googleapis.com/v4/spreadsheets/' + sheetId + '/values/Offers!' + range + '?key=' + APIKey\n\n\t\tconst res = await fetch(url, options)\n\t\tconst data = await res.json()\n\t\tvar key = keys1[i]\n\t\tvar val = data[\"values\"]\n\t\tvar obj = {}\n\t\tobj[key] = val\n\t\tthis.setState(obj)\n\t}\n}\n\n\tcomponentDidUpdate(prevProps) {\n\t\t// Typical usage (don't forget to compare props):\n\t\tif (this.props.targetLabel !== prevProps.targetLabel) {\n\t\t  this.fetchData(this.props.targetLabel);\n\t\t}\n\t  }\n\n  \n  //rendering component with data from rest api\n  render() {\n    return (\n\t<>\n\t<div style={{width: '45%', float: 'left', paddingLeft: '5%'}}>\n\t<form>\n\t\t<label><b>filter needs:</b> ‎</label>\n        <input\n          type=\"text\"\n          value={this.state.targetLabel}\n          onChange={this.handleChange}\n        />\n\t\t<h6>(try typing \"funds\", \"$\", \"food\", etc.)</h6>\n    </form>\n\t</div>\n\t<div style={{width: '45%', float: 'right', paddingRight: '5%'}}>\n\t<form>\n\t\t<label><b>filter offers: ‎‎‎‎‎‎‎‎</b> </label>\n        <input \n\t\t  onChange={this.handleChange1}\n        />\n\t\t<h6>(try typing \"funds\", \"$\", \"labour\", etc.)</h6>\n    </form>\n\t</div>\n\t< Needs dates = {this.state.dates}\n\tedits = {this.state.edits}\n\tnames = {this.state.names}\n\tlocations={this.state.locations}\n\tcontacts={this.state.contacts}\n\tdetails={this.state.details} \n\tlabels={this.state.labels}\n\tstatus={this.state.status}\n\tupdates={this.state.updates}\n\tassistedBy={this.state.assistedBy}\n\ttargetLabel={this.state.targetLabel}\n\t/>\n\t< Offers dates1 = {this.state.dates1}\n\tedits1 = {this.state.edits1}\n\tnames1 = {this.state.names1}\n\tlocations1={this.state.locations1}\n\tcontacts1={this.state.contacts1}\n\tdetails1={this.state.details1} \n\tlabels1={this.state.labels1}\n\tstatus1={this.state.status1}\n\tupdates1={this.state.updates1}\n\ttargetLabel1={this.state.targetLabel1}\n\t/>\n\t\n\t</>\n\t);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}